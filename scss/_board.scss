// define variablesc
$boardSize: 500px;
$borderSize:1px;
$propWidth: ($boardSize * .08)-($borderSize*2);
$propHeight: ($boardSize * .14) - ($borderSize*2);
$propBannerHeight:($propHeight)*.2;
$leftColRightMove:($boardSize)*.290;
$leftColTopMove:($boardSize)*.290;
$rightColRightMove:($boardSize)*-.290;
$rightColTopMove:($boardSize)*.150;
$flippedTopMove:($boardSize)*.440;



//This mixin will draw a square. You send the size of all sides and
// the kind of border that you would like.
@mixin drawSquare($size, $border)
{
  width:$size;
  height:$size;
  border:$border;
  border-image-repeat:none;
}

// This mixin will draw a rectangle. You send the size of the sides
// and the top/bottom and the type of border you would like.
@mixin drawRect($top, $side, $border:none)
{
  width:$top;
  height:$side;
  border:$border;
}

//draw the main board
#board
{
  @include drawSquare($boardSize, 2px solid black);
  margin:auto;



  .cornerProp
  {
    @include drawSquare($propHeight, $borderSize solid black);
    float:left
  }

  .uprightProp
  {
    @include drawRect($propWidth, $propHeight, $borderSize solid black);
    border-bottom:2px solid black;
    float:left;

    .regularProperties
    {
      @include drawRect($propWidth - 1, $propBannerHeight, 1px solid black);
      border-bottom:2px solid black;
    }

    .purple
    {
      background-color:$propertyPurple;
    }

    .teal
    {
      background-color:$propertyTeal;
    }

    .orange
    {
      background-color:$propertyOrange;
    }

   .red
    {
      background-color:$propertyRed;
    }

   .yellow
    {
      background-color:$propertyYellow;
    }

   .lightGreen
    {
      background-color:$propertyLightGreen;
    }

   .green
    {
      background-color:$propertyGreen;
    }

   .blue
    {
      background-color:$propertyBlue;
    }

  }

  .rotateRight
  {
    -webkit-transform:rotate(90deg);
  }

  .rotateLeft
  {
    -webkit-transform:rotate(270deg);
    position:relative;
    top:-30px;
    left:30px;
  }

  .upsideDown
  {
    -webkit-transform:rotate(180deg);
  }

  .horizontalRow
  {
    width:$boardSize;
    height:$propHeight+($borderSize*2);
    float:left;
    div
    {
      float:left;
    }
  }



  .column
  {
    width:($propWidth*9)+($borderSize*18);
    height:$propHeight+($borderSize*2);
  }

  #leftCol
  {
    float:left;
    -webkit-transform:rotate(270deg);
    position:relative;
    right:$leftColRightMove;
    top:$leftColTopMove;
  }

  #rightCol
  {
    -webkit-transform:rotate(90deg);
    float:right;
    position:relative;
    right:$rightColRightMove;
    top:$rightColTopMove;
  }

  .flipped
  {
    -webkit-transform:rotate(180deg);
    position:relative;
    top:$flippedTopMove;
  }


}



//draw a corner square